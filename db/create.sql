-- db framework: postgresql

CREATE TABLE Users (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    email VARCHAR UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    firstname VARCHAR(255) NOT NULL,
    lastname VARCHAR(255) NOT NULL,
    address VARCHAR(511),
    isSeller BOOLEAN DEFAULT False,
    balance DECIMAL(12,2) DEFAULT 0 CHECK (balance >= 0)
);

CREATE TABLE Categories (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE Products (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    categoryid INT NOT NULL REFERENCES Categories(id),
    name VARCHAR(255) UNIQUE NOT NULL,
    description VARCHAR(511),
    image VARCHAR(255)
);

CREATE TABLE SellerInventories (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    sellerid INT NOT NULL REFERENCES Users(id),
    productid INT NOT NULL REFERENCES Products(id),
    quantity INT NOT NULL CHECK (quantity >= 0)
);

CREATE TABLE PriceHistory (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    inventoryid INT NOT NULL REFERENCES SellerInventories(id),
    price DECIMAL(12,2) NOT NULL,
    time_changed timestamp without time zone NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC')
);

CREATE TABLE Carts (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    userid INT NOT NULL REFERENCES Users(id),
    quantity INT NOT NULL,
    sellerinventoryid INT NOT NULL REFERENCES SellerInventories(id),
    saved_for_later BOOLEAN DEFAULT FALSE
);

CREATE TABLE Orders (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    userid INT NOT NULL REFERENCES Users(id),
    time_brought timestamp without time zone NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
    order_status VARCHAR(255) NOT NULL
);


CREATE TABLE OrderItems (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    orderid INT NOT NULL REFERENCES Orders(id),
    productid INT NOT NULL REFERENCES Products(id),
    sellerid INT NOT NULL REFERENCES Users(id),
    quantity INT NOT NULL,
    brought_price DECIMAL(12,2) NOT NULL,
    fulfilled BOOLEAN DEFAULT FALSE
);

CREATE TABLE Coupons (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    sellerinventoryid INT NOT NULL REFERENCES SellerInventories(id),
    code VARCHAR UNIQUE NOT NULL,
    discount DECIMAL(3,0) NOT NULL CHECK (discount >= 0 AND discount <= 100)
);

CREATE TABLE ProductComments (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    productid INT NOT NULL REFERENCES Products(id),
    userid INT NOT NULL REFERENCES Users(id),
    comment VARCHAR(255),
    time_commented timestamp without time zone NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
    rate INT
);

CREATE TABLE SellerComments (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    userid INT NOT NULL REFERENCES Users(id),
    sellerid INT NOT NULL REFERENCES Users(id),
    comment VARCHAR(255),
    date_commented timestamp without time zone NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
    rate INT
);


/**
    * The following tables are not used in the current implementation.
 */

-- CREATE TABLE Purchases (
--     id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--     uid INT NOT NULL REFERENCES Users(id),
--     pid INT NOT NULL REFERENCES Products(id),
--     time_purchased timestamp without time zone NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC')
-- );

-- CREATE TABLE Wishes (
--     id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--     uid INT NOT NULL REFERENCES Users(id),
--     pid INT NOT NULL REFERENCES Products(id),
--     time_added timestamp without time zone NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC')
-- );
